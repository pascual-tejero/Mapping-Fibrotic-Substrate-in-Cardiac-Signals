function [singularity_points] = singularity_points_function(values, mesh, electrodes)

    singularity_points = [];
    addpath('/Volumes/bordeaux/IBT10.10/matlab/projects/EGMDataProcessing/FilteringAndProcessing')
    values = filterSignalsClinically(values,333,0.,166,2);
%     sigma = 1.5;
%     values = gaussFiltfilt(values, sigma); % Gauss filter
    
    values_n = normalize(values','zscore','robust');
    H = hilbert(values_n);
    phase = atan2(imag(H),real(H));
    
%     cont = 1;
% 
%     cells = mesh.cells;   
%     points = mesh.points;
%     
%     for j = 1:size(values_n,2) 
%         for k = 1:size(cells,1)
%             vector_cells = cells(k,:);
%             sum_phase = sum(phase(vector_cells,j));
% 
%             if sum_phase >= 2*pi
%                 singularity_points(cont,1:3) = vector_cells;
%                 singularity_points(cont,4) = j;
%                 cont = cont + 1;
%             end
% 
%         end
%     end
    comb = vtkAppendPolyData({mesh, electrodes});
    qtrip(comb.points, comb.cells, phase', 1041, [0 90 90], 0.5, [min(min(phase)) max(max(phase))], 10);
    %figure; plot(phase(singularity_points(cont-1,4),:));
end